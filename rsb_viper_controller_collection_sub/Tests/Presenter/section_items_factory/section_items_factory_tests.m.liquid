{% include 'header' %}

#import <XCTest/XCTest.h>
#import <OCMock/OCMock.h>

#import <RSBCollectionViewManager/RSBCollectionViewSectionItemProtocol.h>
#import "{{ prefix }}{{ module_info.name }}SectionItemsFactory.h"
#import "{{ prefix }}{{ module_info.name }}CellItemsFactory.h"

@interface {{ prefix }}{{ module_info.name }}SectionItemsFactoryTests : XCTestCase

@property (nonatomic) {{ prefix }}{{ module_info.name }}SectionItemsFactory *sectionItemsFactory;
@property (nonatomic) {{ prefix }}{{ module_info.name }}CellItemsFactory *cellItemsFactory;

@end

@implementation {{ prefix }}{{ module_info.name }}SectionItemsFactoryTests

- (void)setUp {
    [super setUp];
    
    self.sectionItemsFactory = [[{{ prefix }}{{ module_info.name }}SectionItemsFactory alloc] init];
    self.cellItemsFactory = [[{{ prefix }}{{ module_info.name }}CellItemsFactory alloc] init];
    
    self.sectionItemsFactory.cellItemsFactory = self.cellItemsFactory;
}

- (void)tearDown {
    self.sectionItemsFactory = nil;
    self.cellItemsFactory = nil;
    
    [super tearDown];
}

- (void)testThatFactoryCorrectlyCreatesSectionItems {
    //given
    NSMutableArray *objects = [NSMutableArray array];
    
    for (NSInteger i = 0; i < 3; ++i) {
        [objects addObject:[[NSObject alloc] init]];
    }
    
    //when
    id<RSBCollectionViewSectionItemProtocol> sectionItem = [self.sectionItemsFactory sectionItemWithCellItemsFromObjects:objects];
    
    //then
    XCTAssertEqual(sectionItem.cellItems.count, objects.count);
}

@end
