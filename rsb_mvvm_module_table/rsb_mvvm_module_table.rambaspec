# Template information section
name: "rsb_mvvm_module_table"
summary: "MVVM module template with UIViewController playing as a View. If ViewController has table view and you use RSBTableViewManager it is a right choice."
author: "Anton Kovalev"
version: "1.0.1"
license: "MIT"

# Use custom parameter inherit If you want to inherit your module. 

# The declarations for code files
code_files:
# Assembly layer
- {name: Assembly/Assembly.h, path: Code/Assembly/assembly.h.liquid}
- {name: Assembly/Assembly.m, path: Code/Assembly/assembly.m.liquid}

# View layer
- {name: View/ViewOutput.h, path: Code/View/view_output.h.liquid}
- {name: View/ViewController.h, path: Code/View/viewcontroller.h.liquid}
- {name: View/ViewController.m, path: Code/View/viewcontroller.m.liquid}
- {name: View/DataDisplayManager/DataDisplayManagerInput.h, path: Code/View/DataDisplayManager/data_display_manager_input.h.liquid}
- {name: View/DataDisplayManager/DataDisplayManager.h, path: Code/View/DataDisplayManager/data_display_manager.h.liquid}
- {name: View/DataDisplayManager/DataDisplayManager.m, path: Code/View/DataDisplayManager/data_display_manager.m.liquid}
- {name: View/CellItems/BaseTableViewCellItem.h, path: Code/View/cellitems/basecellitem.h.liquid}
- {name: View/CellItems/BaseTableViewCellItem.m, path: Code/View/cellitems/basecellitem.m.liquid}
- {name: View/Factories/SectionItemsFactory/SectionItemsFactoryInput.h, path: Code/View/Factories/section_items_factory/factory_input.h.liquid}
- {name: View/Factories/SectionItemsFactory/SectionItemsFactory.h, path: Code/View/Factories/section_items_factory/factory.h.liquid}
- {name: View/Factories/SectionItemsFactory/SectionItemsFactory.m, path: Code/View/Factories/section_items_factory/factory.m.liquid}
- {name: View/Factories/CellItemsFactory/CellItemsFactoryInput.h, path: Code/View/Factories/cell_items_factory/factory_input.h.liquid}
- {name: View/Factories/CellItemsFactory/CellItemsFactory.h, path: Code/View/Factories/cell_items_factory/factory.h.liquid}
- {name: View/Factories/CellItemsFactory/CellItemsFactory.m, path: Code/View/Factories/cell_items_factory/factory.m.liquid}
- {name: View/DataContainers/DataContainer.h, path: Code/View/DataContainers/data_container.h.liquid}
- {name: View/DataContainers/DataContainer.m, path: Code/View/DataContainers/data_container.m.liquid}

# ViewModel layer
- {name: ViewModel/ModuleInput.h, path: Code/ViewModel/module_input.h.liquid}
- {name: ViewModel/ViewModel.h, path: Code/ViewModel/viewmodel.h.liquid}
- {name: ViewModel/ViewModel.m, path: Code/ViewModel/viewmodel.m.liquid}

# Interactor layer
- {name: Interactor/InteractorInput.h, path: Code/Interactor/interactor_input.h.liquid}
- {name: Interactor/Interactor.h, path: Code/Interactor/interactor.h.liquid}
- {name: Interactor/Interactor.m, path: Code/Interactor/interactor.m.liquid}

# Router layer
- {name: Router/RouterInput.h, path: Code/Router/router_input.h.liquid}
- {name: Router/Router.h, path: Code/Router/router.h.liquid}
- {name: Router/Router.m, path: Code/Router/router.m.liquid}

# The declarations for test files
test_files:
# Assembly tests
- {name: Assembly/AssemblyTests.m, path: Tests/Assembly/assembly_tests.m.liquid}
- {name: Assembly/Assembly_Testable.h, path: Tests/Assembly/assembly_testable.h.liquid}

# View tests
- {name: View/DataDisplayManagerTests.m, path: Tests/View/data_display_manager_tests.m.liquid}
- {name: View/ViewControllerTests.m, path: Tests/View/view_tests.m.liquid}
- {name: View/SectionItemsFactoryTests.m, path: Tests/View/section_items_factory_tests.m.liquid}
- {name: View/CellItemsFactoryTests.m, path: Tests/View/cell_items_factory_tests.m.liquid}

# ViewModel tests
- {name: ViewModel/ViewModelTests.m, path: Tests/ViewModel/viewmodel_tests.m.liquid}

# Interactor tests
- {name: Interactor/InteractorTests.m, path: Tests/Interactor/interactor_tests.m.liquid}

# Router tests
- {name: Router/RouterTests.m, path: Tests/Router/router_tests.m.liquid}

# Template dependencies
dependencies:
- Typhoon
- OCMock
- RamblerTyphoonUtils
- RSBTableViewManager
