{% include 'header' %}

#import <XCTest/XCTest.h>
#import <OCMock/OCMock.h>

#import "{{ prefix }}{{ module_info.name }}SubmoduleCellItemsFactory.h"
#import "{{ prefix }}{{ module_info.name }}SubmoduleBaseCollectionViewCellItem.h"

@interface {{ prefix }}{{ module_info.name }}SubmoduleCellItemsFactoryTests : XCTestCase

@property (nonatomic) {{ prefix }}{{ module_info.name }}SubmoduleCellItemsFactory *factory;

@end

@implementation {{ prefix }}{{ module_info.name }}SubmoduleCellItemsFactoryTests

- (void)setUp {
    [super setUp];
    
    self.factory = [[{{ prefix }}{{ module_info.name }}SubmoduleCellItemsFactory alloc] init];
}

- (void)tearDown {
    self.factory = nil;
    
    [super tearDown];
}

- (void)testThatFactoryCorrectlyCreatesCellItems {
    //given
    NSMutableArray *objects = [NSMutableArray array];
    
    for (NSInteger i = 0; i < 3; ++i) {
        [objects addObject:[NSObject new]];
    }
    
    //when
    NSArray *cellItems = [self.factory cellItemsFromObjects:objects];
    
    //then
    XCTAssertEqual(cellItems.count, objects.count);
    
    [cellItems enumerateObjectsUsingBlock:^({{ prefix }}{{ module_info.name }}SubmoduleBaseCollectionViewCellItem *cellItem, NSUInteger idx, BOOL * _Nonnull stop) {
        XCTAssertEqual(cellItem.class, [{{ prefix }}{{ module_info.name }}SubmoduleBaseCollectionViewCellItem class]);
        XCTAssertEqual(cellItem.object, objects[idx]);
    }];
}

@end
